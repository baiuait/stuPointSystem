package cn.bdqn.controller;

import cn.bdqn.pointsystem.emtitys.User;
import cn.bdqn.pointsystem.service.UserService;
import cn.bdqn.pointsystem.utlis.Constant;
import cn.bdqn.pointsystem.utlis.ReturnResult;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpSession;
import java.util.HashMap;
import java.util.Map;

/**
 * @Classname sysUserController
 * @Description 注释
 * @Date 2020/1/6 11:34
 * @Created by zhaomengliang
 */
@Controller
@RequestMapping("/sys")
public class sysUserController {

    @Autowired
    private UserService userService;

    @PostMapping("/import")
    @ResponseBody
    public Map<String,Object> setUsers(MultipartFile file){
        if(file.isEmpty()){
            return null;
        }
        String result=null;
        String fileName=file.getOriginalFilename();
        try {
            result= userService.batchImport(fileName,file);
//            System.out.println(fileName);
        } catch (Exception e) {
            e.printStackTrace();
        }
        Map<String,Object> map=new HashMap<String,Object>();
        map.put("code",Integer.valueOf(result)>0?"0":"1");

        map.put("data",null);
        map.put("msg","ok");
        return map;
    }


    /**
     * 分页
     * @param page 当前页数
     * @param limit 显示几条数据
     * @param isAdmin 是否为管理员
     * @param name 用户名
     * @param gradeId 班级编号
     * @return
     */
    @ResponseBody
    @GetMapping("/list")
    public Object listUser(@RequestParam(required = false) Integer page,
                           @RequestParam(required = false) Integer limit,
                           @RequestParam(required = false)  Integer isAdmin,
                           @RequestParam(required = false)  String name,
                           @RequestParam(required = false)  Integer gradeId){
        Page<User> ipage=new Page<>(page,limit);//分页实体类 当前页,每页显示的数据
        IPage<User> pageUser = userService.getPageUser(ipage, gradeId, isAdmin, name);//分页
        int count=userService.count(gradeId,isAdmin,name);//用户集合count
        Map<Object,Object> map=new HashMap<>();
        map.put("code","0");
        map.put("count",count);
        map.put("data",pageUser.getRecords());
        map.put("msg","");
        return map;
    }

    /**
     * 添加用户
     * @param user  用户实体类
     * @param session
     * @return
     */
    @RequestMapping("/registerUser")
    @ResponseBody
    public Object registerUser(User user, HttpSession session){
        Map<String,Object>map=new HashMap<>();
        if(user.getIsAdmin()==1){
            user.setIsAdmin(1);
        }else{
            user.setIsAdmin(0);
            user.setPoint(100);
        }
        int i = userService.addtUser(user);//添加用户
        if(i>0){//注册成功
            //保存用户到session对象中
            if(user.getIsAdmin()==1){
                session.setAttribute(Constant.CURRENT_USER, user);
            }
            map= ReturnResult.returnSuccess("成功",user.getIsAdmin());
        }else{
            map= ReturnResult.returnFail("失败",null,"500");
        }
        return map;
    }
    /**
     * @Description 修改用户信息
     * @Param
     * @return
     * @Date 2020/1/6 11:38
     * @auther zhaomengliang
     */
    @ResponseBody
    @RequestMapping("/updateStudent")
    public String updateStudent(String name,String identity,String address,String gradeId,String id){
        Integer gradeid=Integer.valueOf(gradeId);
        Integer Id=Integer.valueOf(id);
        User user=new User();
        user.setId(Id);
        user.setName(name);
        user.setIdentity(identity);
        user.setAddress(address);
        user.setGradeId(gradeid);
        if(userService.changeUser(user)>0){
            return "true";
        }else{
            return "false";
        }
    }
}
