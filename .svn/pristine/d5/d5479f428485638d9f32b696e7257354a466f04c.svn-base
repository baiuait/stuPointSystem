package cn.bdqn.controller;


import cn.bdqn.pointsystem.emtitys.Grade;
import cn.bdqn.pointsystem.emtitys.User;
import cn.bdqn.pointsystem.service.GradeService;
import cn.bdqn.pointsystem.service.IntegralRecordService;
import cn.bdqn.pointsystem.service.UserService;
import cn.bdqn.pointsystem.utlis.Constant;
import cn.bdqn.pointsystem.utlis.ReturnResult;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @author yajun,wxz
 * @create 2019/12/27
 */
@Controller
@RequestMapping("/user")
public class UserController {

    @Autowired
    private UserService userService;
    //积分增删
    @Autowired
    private IntegralRecordService recordService;
    //班级表
    @Autowired
    private GradeService gradeService;

    /**
     * 跳转用户管理页面
     * @param model
     * @return
     */
    @RequestMapping("/u")
    public String user(Model model){
        List<Grade> gradeList = gradeService.getGradesOrderByPoint();//查询班级表
        model.addAttribute("gradeList",gradeList);
        return "admin/user";
    }

    /**
     * 分页
     * @param page 当前页数
     * @param limit 显示几条数据
     * @param isAdmin 是否为管理员
     * @param name 用户名
     * @param gradeId 班级编号
     * @return
     */
    @ResponseBody
    @GetMapping("/list")
    public Object listUser(@RequestParam(required = false) Integer page,
                               @RequestParam(required = false) Integer limit,
                               @RequestParam(required = false)  Integer isAdmin,
                               @RequestParam(required = false)  String name,
                               @RequestParam(required = false)  Integer gradeId){
        Page<User> ipage=new Page<>(page,limit);//分页实体类 当前页,每页显示的数据
        IPage<User> pageUser = userService.getPageUser(ipage, gradeId, isAdmin, name);//分页
        int count=userService.count(gradeId,isAdmin,name);//用户集合count
        Map<Object,Object> map=new HashMap<>();
        map.put("code","0");
        map.put("count",count);
        map.put("data",pageUser.getRecords());
        map.put("msg","");
        return map;
    }

    /**
     * 登陆方法
     * @param identity 身份证号
     * @param name 用户名
     * @param session
     * @return
     */
    @ResponseBody
    @GetMapping("/login")
    public Map<String,Object> login(@RequestParam String identity, @RequestParam String name,
                     HttpSession session){
        User user = userService.login(identity, name);
        Map<String, Object> map=null;
        if (null==user){
            //判断身份证是否存在
            if (null==userService.findUserByidentity(identity)){
                //为空返回5002，身份证不存在
                 map = ReturnResult.returnFail(null, null, 5002);
            }else {
                //返回5003，身份存在，则用户名不匹配
                map = ReturnResult.returnFail(null,null,5003);
            }
        }else {
            //保存用户到session对象中
            session.setAttribute(Constant.CURRENT_USER, user);
            //登陆成功
            map = ReturnResult.returnSuccess(null,user.getIsAdmin());
        }
        return map;
    }


}
