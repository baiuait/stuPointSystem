package cn.bdqn.controller;

import cn.bdqn.pointsystem.emtitys.Cause;
import cn.bdqn.pointsystem.emtitys.Grade;
import cn.bdqn.pointsystem.emtitys.User;
import cn.bdqn.pointsystem.service.CauseService;
import cn.bdqn.pointsystem.service.GradeService;

import cn.bdqn.pointsystem.service.IntegralRecordService;
import cn.bdqn.pointsystem.service.UserService;
import cn.bdqn.pointsystem.utlis.Constant;
import cn.bdqn.pointsystem.utlis.ReturnResult;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @Classname GradeController
 * @Description TODO
 * @Date 2019/12/27 18:30
 * @Created by Administrator
 */
@Controller
@RequestMapping("/grade")
public class GradeController {

    @Autowired
    private GradeService gradeService;
    @Autowired
    private IntegralRecordService recordService;
    @Autowired
    private CauseService causeService;
    @Autowired
    private IntegralRecordService integralRecordService;
    @Autowired
    private UserService userService;

    /**
     * 跳转用户管理页面
     * @param model
     * @return
     */
    @RequestMapping("/u")
    public String user(Model model){
        List<Grade> gradeList = gradeService.getGradesOrderByPoint();//查询班级表
        model.addAttribute("gradeList",gradeList);
        return "admin/user";
    }  /**
     * 跳转商品信息管理页面
     * @param model
     * @return
     */
    @RequestMapping("/per")
    public String per(Model model){
        return "admin/prizeExchangRecord";
    }
    /**
     * 跳转商品页面
     * @return
     */
    @GetMapping("/p")
    public String prize(){
        return "admin/prize";
    }

    /**
     * 跳转积分加减记录页面
     */
    @RequestMapping("/integralRecord")
    public String integralRecord(Model model,
                                 @RequestParam(required = false) Integer userId,
                                 @RequestParam(required = false) Integer recorderId){
        List<User> userList=userService.userList();
        List<Grade> gradeList = gradeService.getGradeName();
        model.addAttribute("gradeList",gradeList);
        model.addAttribute("userList",userList);
        return "admin/integralRecord";
    }

    @RequestMapping("/gradeList")
    public String gradeList(@RequestParam(required = false) Integer pageStart, @RequestParam(required = false) Integer pageSize, Grade grade, Model model){
        List<Grade> gradeList = gradeService.getGradeList(grade);
        model.addAttribute("gradeList",gradeList);
        return "admin/grade";//跳转班级页面
    }

    /**
     * 查询班级的积分
     * @param session
     * @return
     */
    @GetMapping("/getPointByGradeId")
    @ResponseBody
    public  Map<String,Object> getPointByGradeId(HttpSession session){
        Map<String,Object>map =null;
        User user = (User)session.getAttribute(Constant.CURRENT_USER);
        Grade grade = gradeService.getGradeById(user.getGradeId());
        if (null == grade){
            map = ReturnResult.returnFail(null,null,500);
        }else {
            map = ReturnResult.returnSuccess(null,grade.getPoint());
        }
        return map;
    }

    @GetMapping("/getGradeListOrderByPoint")
    @ResponseBody
    public Map<String,Object> getGradeListOrderByPoint(){
        Map<String,Object>map = null;
        List<Grade> point = gradeService.getGradesOrderByPoint();
        map = ReturnResult.returnSuccess(null,point);
        return map;
    }


    /**
     * 分页查询班级信息
     * @param page 第几页
     * @param limit 每页几条数据
     * @return
     */
    @ResponseBody
    @RequestMapping("/grades")
    public Map<String, Object> grades(int page,int limit){
        Page<Grade> gradePage=new Page<>(page,limit);
        IPage<Grade> gradeIPage =gradeService.selectPageGrade(gradePage,"");
        int count=gradeService.selectGradeCount();
        Map<String,Object> map=new HashMap<>();
        map.put("code","0");
        map.put("msg","");
        map.put("count",count);
        map.put("data",gradeIPage.getRecords());
        return map;
    }

    /**
     * 跳转到后台主页
     * @return
     */
    @RequestMapping("/adminIndex")
    public String homePage(Model model){
        List<Grade> gradeName = gradeService.getGradeName();
        model.addAttribute("gradeNames",gradeName);
        return "admin/homePage";
    }



    /**
     * 异步加载班级选择框
     * @return
     */
    @ResponseBody
    @RequestMapping("/gradesName")
    public List<Grade> gradesName(){
        List<Grade> grades= gradeService.getGradeName();
        return grades;
    }

    /**
     * 添加班级
     * @param name
     * @return
     */
    @ResponseBody
    @RequestMapping("/addGrade")
    public String addGrade(String name){
        if(gradeService.insertGrade(name)>0){
            return "true";
        }else{
            return "false";
        }
    }



    /**
     * 跳转班级奖惩页面
     * @return
     */
    @RequestMapping("/gradeReward")
    public String gradeReward(Model model,
                              @RequestParam(required = false) Integer userId,
                              @RequestParam(required = false) Integer recorderId){
        List<User> userList=userService.userList();
        List<Grade> gradeList2 = gradeService.getGradeName();
        model.addAttribute("gradeList",gradeList2);
        model.addAttribute("userList",userList);
        List<Cause> causeList=causeService.getAllCause();
        List<Grade> gradeList=gradeService.getGradeName();
        model.addAttribute("causeList",causeList);
        model.addAttribute("gradeName",gradeList);
        return "admin/gradeReward";
    }

    /**
     * 加载班级
     * @return
     */
    @RequestMapping("/gradePoint")
    public String gradePoint(){
        return "admin/gradePoint";
    }

    @ResponseBody
    @RequestMapping("/gradePointChange")
    public String gradePointChange(String gradeid, String causeid, String point, String isadd, HttpServletRequest request){
        int gradeId=Integer.valueOf(gradeid);
        int causeId=Integer.valueOf(causeid);                  //将String类型转为integer类型
        int pointNum=Integer.valueOf(point);
        int isAdd=Integer.valueOf(isadd);
        Grade grade= gradeService.getGradeById(gradeId);        //根据id获取班级信息
        int num=0;
        if(isAdd==1){                //根据isadd判断是增加还是减少
            int p=grade.getPoint();
            num=p+pointNum;       //num为增加后的积分
            System.out.println("增加后的积分是"+num);
        }else{
            int p=grade.getPoint();
            num=p-pointNum;
            System.out.println("减少后的积分是"+num);
        }
                   //将班级积分变化加入记录表
        IntegralRecord integralRecord=new IntegralRecord();
        integralRecord.setGradeId(gradeId);
        integralRecord.setPoint(pointNum);
        integralRecord.setIsAdd(isAdd);
        integralRecord.setCauseId(causeId);
        integralRecord.setCreationTime(new Date());
        User user=(User)request.getSession().getAttribute(Constant.CURRENT_USER); //获取当前用户
        int recorderId=user.getId();
        integralRecord.setRecorderId(recorderId);
        if(integralRecordService.insertIntegralRecord(integralRecord)>0 && gradeService.changeGradePoint(gradeId,num)>0){ //添加记录成功
            return "true";
        }else{
            return "false";
        }
    }

    /**
     * 班级积分记录
     * @return
     */
    @ResponseBody
    @RequestMapping("/gradeIntegral")
    public Map<String,Object> gradeIntegral(){
        return null;
    }


}
