package cn.bdqn.controller;

import cn.bdqn.pointsystem.emtitys.Prize;
import cn.bdqn.pointsystem.service.PrizeService;
import cn.bdqn.pointsystem.utlis.FileUpload;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.junit.platform.commons.util.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @Classname sysPrizeController
 * @Description 注释
 * @Date 2020/1/6 12:02
 * @Created by zhaomengliang
 */
@Controller
@RequestMapping("/sys/prize")
public class SysPrizeController {

    @Autowired
    private PrizeService prizeService;
    @ResponseBody
    @RequestMapping(value = "/hello", method = RequestMethod.GET)
    public String ho(){
        return "prize";
    }
    @ResponseBody
    @GetMapping("/list")
    public List<Prize> list(){ return prizeService.selectPrize(); }
    @ResponseBody
    @GetMapping("/insert")
    public boolean insertPrinze(Prize prize){
        return prizeService.insertPrize(prize);
    }
    @ResponseBody
    @GetMapping("/selectone")
    public  Prize selectOne(int id){ return  prizeService.selectPrizeOne(id); }

    @ResponseBody
    @GetMapping("/getPrizePage")
    public  Object getPrizePage(@RequestParam(required = false) Integer page,
                                @RequestParam(required = false) Integer limit,
                                @RequestParam(required = false) String name){
        Page<Prize> ipage=new Page<>(page,limit);//分页实体类  (当前页,每页显示几条信息)
        IPage<Prize> prizeIPage = prizeService.selectPagePrize(ipage, name);//分页

        int count=prizeService.prizeCount(name);//查询商品总记录数
        Map<Object,Object> map=new HashMap<>();
        map.put("data",prizeIPage.getRecords());//返回的集合数据
        map.put("code","0");
        map.put("count",count);
        map.put("msg","");
        return map;
    }

    @GetMapping("/getByIdPrize")
    public String getByIdPrize(int prizeId, Model model){
        Prize prize = prizeService.selectPrizeOne(prizeId);
        model.addAttribute("prize",prize);
        return "admin/getByIdPrize";
    }

    @GetMapping("/updatePrize")
    @ResponseBody
    public Object updatePrize(Prize prize, Model model){
        boolean flag = prizeService.updatePrize(prize);
        Map<Object,Object> map=new HashMap<>();
        map.put("flag",flag);
        return map;
    }

    /**
     * 添加页面
     * @return
     */
    @GetMapping("/in")
    public String i(){
        return "/admin/insertprize";
    }

    /**
     * 获取系统路径（文件存放位置）
     */
    @Value("${value.systemPath}")
    private String systemPath;

    /**
     * 增加商品
     * @param file  前台上传图片
     * @param prize 商品对象
     * @return
     */
    @RequestMapping("/pictureUpload")
    public String fileUpload(MultipartFile file, Prize prize){//必须使用MultipartFile类型来接收图片
        prize.setImgUrl(FileUpload.getFileURL(file,FileUpload.getpath().substring(6),systemPath));
        prize.setId(0);
        prizeService.insertPrize(prize);
        return "/admin/insertprize";
    }
    /**删除文件
     * @param path 目录
     */
    public void delFile (String path) {
        File file=new File(path);
        if(file.exists() && file.isFile())
            file.delete();
    }


    /**
     * 商品修改
     * @param name
     * @param point
     * @param number
     * @param file
     * @param id
     * @param img 未修改前图片路径
     * @return
     */
    @PostMapping("/updateprize")
    public String upPrize(@RequestParam("name") String name
            ,@RequestParam("point") Integer point
            ,@RequestParam("number") Integer number
            ,@RequestParam("file") MultipartFile file
            ,@RequestParam("id") Integer id
            ,@RequestParam("img") String img
    ){
        Prize prize=new Prize();
        prize.setName(name);
        prize.setPoint(point);
        prize.setNumber(number);
        if (StringUtils.isNotBlank(file.getOriginalFilename())) {//根据文件名判断文件是否为空

            System.out.println("存储地址================="+FileUpload.getpath().substring(6)+systemPath);
            prize.setImgUrl(FileUpload.getFileURL(file,FileUpload.getpath().substring(6),systemPath));
            delFile(FileUpload.getpath().substring(6)+img);
        }else{
            System.out.println("img=========="+img);
            prize.setImgUrl(img);
        }
        prize.setId(id);
        prizeService.updatePrize(prize);
        return "/grade/p";
    }


}
